<?php

/**
 * BaseJobs
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $categoryid
 * @property string $title
 * @property string $description
 * @property string $toapply
 * @property string $company
 * @property string $location
 * @property integer $public
 * @property integer $expirationdate
 * @property string $changedby
 * @property timestamp $changeddate
 * @property integer $status
 * @property timestamp $codestamp
 * @property timestamp $postedat
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 5925 2009-06-22 21:27:17Z jwage $
 */
abstract class BaseJobs extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('jobs');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => '1',
             'primary' => true,
             'autoincrement' => true,
             'length' => '4',
             ));
        $this->hasColumn('categoryid', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => 0,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('title', 'string', 200, array(
             'type' => 'string',
             'fixed' => 0,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '200',
             ));
        $this->hasColumn('description', 'string', 4000, array(
             'type' => 'string',
             'fixed' => 0,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4000',
             ));
        $this->hasColumn('toapply', 'string', 250, array(
             'type' => 'string',
             'fixed' => 0,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '250',
             ));
        $this->hasColumn('company', 'string', 120, array(
             'type' => 'string',
             'fixed' => 0,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '120',
             ));
        $this->hasColumn('location', 'string', 120, array(
             'type' => 'string',
             'fixed' => 0,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '120',
             ));
        $this->hasColumn('public', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => 0,
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('expirationdate', 'integer', 4, array(
             'type' => 'integer',
             'unsigned' => '1',
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '4',
             ));
        $this->hasColumn('changedby', 'string', 100, array(
             'type' => 'string',
             'fixed' => 0,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '100',
             ));
        $this->hasColumn('changeddate', 'timestamp', 25, array(
             'type' => 'timestamp',
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('status', 'integer', 1, array(
             'type' => 'integer',
             'unsigned' => '1',
             'primary' => false,
             'default' => '0',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '1',
             ));
        $this->hasColumn('codestamp', 'timestamp', 25, array(
             'type' => 'timestamp',
             'primary' => false,
             'default' => '0000-00-00 00:00:00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
        $this->hasColumn('postedat', 'timestamp', 25, array(
             'type' => 'timestamp',
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '25',
             ));
    }

    public function setUp()
    {
        parent::setUp();
    
    }
}